version: '3.1'

services:
  app:
    build: .
    command: bash -c "python /app/manage.py migrate --noinput && python /app/manage.py runserver 0.0.0.0:8000"
    stdin_open: true
    tty: true
    environment:
      DJANGO_SETTINGS_MODULE: '${DJANGO_SETTINGS_MODULE}'
      RABBITMQ_URL: '${RABBITMQ_URL}'
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      - ./public:/public
    depends_on:
      - redis
      - postgres
      - adminer
      - broker

  celery:
    build: .
    command: bash -c "cd /app && celery -A config worker -l info"
    stdin_open: true
    tty: true
    environment:
      DJANGO_SETTINGS_MODULE: '${DJANGO_SETTINGS_MODULE}'
      RABBITMQ_URL: '${RABBITMQ_URL}'
    depends_on:
      - redis
      - postgres
      - adminer
      - broker

  celery_beat:
    build: .
    command: bash -c "cd /app && celery -A config beat -l info"
    environment:
      DJANGO_SETTINGS_MODULE: '${DJANGO_SETTINGS_MODULE}'
      RABBITMQ_URL: '${RABBITMQ_URL}'
    depends_on:
      - redis
      - postgres
      - adminer
      - broker

  redis:
    build:
      ./redis

  broker:
    build:
      ./broker
    logging:
      driver: none
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_USER}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_PASSWORD}'
    volumes:
      - ./dockerfiles/rabbitmq:/var/lib/rabbitmq/mnesia

  postgres:
    build:
      ./postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 12345
      DATABASE_NAME: '${DATABASE_NAME}'
      DATABASE_USER: '${DATABASE_USER}'
      DATABASE_PASSWORD: '${DATABASE_PASSWORD}'
    volumes:
      - ./dockerfiles/pgdata:/var/lib/postgresql/data

  adminer:
    build:
      ./adminer
    restart: always
    ports:
      - 9999:8080
    depends_on:
      - postgres
